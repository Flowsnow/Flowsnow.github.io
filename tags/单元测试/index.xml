<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单元测试 on Suncle&#39;s Blog</title>
    <link>https://suncle.me/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 单元测试 on Suncle&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 14 Nov 2017 20:01:27 +0000</lastBuildDate>
    
	<atom:link href="https://suncle.me/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python单元测试</title>
      <link>https://suncle.me/2017/11/14/Python%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Tue, 14 Nov 2017 20:01:27 +0000</pubDate>
      
      <guid>https://suncle.me/2017/11/14/Python%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;h1 id=&#34;单元测试&#34;&gt;单元测试&lt;/h1&gt;
&lt;p&gt;什么是单元测试, 维基百科上是这么定义的： unit testing is a method by which individual units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures, are tested to determine if they are fit for use.[1] Intuitively, one can view a unit as the smallest testable part of an application. 简而言之，就是验证系统中最小可测试单元的功能是否正确的自动化测试。因此，单元测试的目地就是“对被测试对象的职责进行验证”, 在写单元测试之前，先识别出被测试对象的职责，就知道该怎么写这个单元测试了。&lt;/p&gt;
&lt;p&gt;根据被测试对象，单元测试可以分为两大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对不依赖于外部资源的组件的单元测试：使用unittest基本功能即可&lt;/li&gt;
&lt;li&gt;对依赖于外部资源的组件的单元测试：需要使用mock&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>