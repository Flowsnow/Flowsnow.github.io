<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Erlang on Suncle&#39;s Blog</title>
    <link>https://suncle.me/tags/Erlang/</link>
    <description>Recent content in Erlang on Suncle&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 29 Jan 2018 18:31:37 +0000</lastBuildDate>
    
	<atom:link href="https://suncle.me/tags/Erlang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Erlang测试全集(挖坑)</title>
      <link>https://suncle.me/2018/01/29/Erlang-test-knowledge-collection/</link>
      <pubDate>Mon, 29 Jan 2018 18:31:37 +0000</pubDate>
      
      <guid>https://suncle.me/2018/01/29/Erlang-test-knowledge-collection/</guid>
      <description>&lt;h1 id=&#34;erlang测试全集挖坑&#34;&gt;Erlang测试全集(挖坑)&lt;/h1&gt;
&lt;p&gt;本次只是简要列举Erlang测试相关的框架和概念，Erlang测试的详细使用在实际使用时再进行补充（&lt;strong&gt;挖坑&lt;/strong&gt;），目前所有的Erlang程序中除部分公共基础app需要写单元测试和覆盖率报告之外其他都不需要写。&lt;/p&gt;
&lt;p&gt;后续会按照以下四个部分介绍Erlang测试相关知识&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EUnit&lt;/li&gt;
&lt;li&gt;Common Test&lt;/li&gt;
&lt;li&gt;Cover&lt;/li&gt;
&lt;li&gt;Quality Control&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Erlang入门路线</title>
      <link>https://suncle.me/2017/12/14/Erlang%E5%85%A5%E9%97%A8%E8%B7%AF%E7%BA%BF/</link>
      <pubDate>Thu, 14 Dec 2017 14:33:30 +0000</pubDate>
      
      <guid>https://suncle.me/2017/12/14/Erlang%E5%85%A5%E9%97%A8%E8%B7%AF%E7%BA%BF/</guid>
      <description>&lt;p&gt;间歇性的学了一些Erlang，写了一个直播cdn网关的程序，也算是贡献了代码，完成了第一个项目。结束之际写一个入门路线，记录学习过程。&lt;/p&gt;
&lt;p&gt;主要根据个人经验介绍最佳的学习路线，包括环境，Erlang语法，OTP和rebar构建调试打包过程等几个部分。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Erlang设计原则Behaviour</title>
      <link>https://suncle.me/2017/11/20/Erlang%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99Behaviour/</link>
      <pubDate>Mon, 20 Nov 2017 16:29:01 +0000</pubDate>
      
      <guid>https://suncle.me/2017/11/20/Erlang%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99Behaviour/</guid>
      <description>&lt;p&gt;标准 Erlang/OTP 行为有&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Behaviour&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;gen_server&lt;/td&gt;
&lt;td&gt;用于实现 C/S 结构中的服务端&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gen_fsm&lt;/td&gt;
&lt;td&gt;用于实现有限状态机&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gen_event&lt;/td&gt;
&lt;td&gt;用于实现事件处理功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;supervisor&lt;/td&gt;
&lt;td&gt;用于实现监督树中的督程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gen_statem&lt;/td&gt;
&lt;td&gt;新版本中的有限状态机实现&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;平时使用最多的是&lt;code&gt;gen_server&lt;/code&gt;和&lt;code&gt;supervisor&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;gen_server&#34;&gt;gen_server&lt;/h1&gt;
&lt;p&gt;erlang gen_server的使用：以银行账户服务为例&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Erlang学习笔记(1)</title>
      <link>https://suncle.me/2017/08/11/Erlang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Fri, 11 Aug 2017 11:08:13 +0000</pubDate>
      
      <guid>https://suncle.me/2017/08/11/Erlang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</guid>
      <description>&lt;h3 id=&#34;0x00-说在前面&#34;&gt;0x00 说在前面&lt;/h3&gt;
&lt;p&gt;Erlang读音&lt;code&gt;/ˈɜːrlæŋ/&lt;/code&gt;。第一次见到的时候总感觉怎么读都读不对，后来在维基上看到Erlang标注了音标，才能准确的读出来，而且也没那么怪异。因为工作才有机会接触这门语言，也因此只有三天的时间可以看《Erlang程序设计》这本书。学习这门语言的时候带着一个工作目标：把一个Erlang日志收集分析统计的代码转换成Python的。而Erlang的风格是尽量不写注释，尽量在写函数名和变量名的时候表达清楚代码的含义。这样一来学习Erlang就成了必要的，很庆幸，领导给了三天时间学习，三天时间基本也足够了。除了这一片基础语法的入门篇之外，后续还有一篇或者两篇并发编程和分布式编程的，毕竟这个才是Erlang擅长的领域。话不多说，&lt;code&gt;show me your article&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>