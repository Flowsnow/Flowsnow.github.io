<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络 on Suncle&#39;s Blog</title>
    <link>https://suncle.me/categories/%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 网络 on Suncle&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Mar 2018 12:45:29 +0000</lastBuildDate>
    
	<atom:link href="https://suncle.me/categories/%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>排查rtmp协议推流时握手bug</title>
      <link>https://suncle.me/2018/03/20/rtmp-handshake-bug/</link>
      <pubDate>Tue, 20 Mar 2018 12:45:29 +0000</pubDate>
      
      <guid>https://suncle.me/2018/03/20/rtmp-handshake-bug/</guid>
      <description>&lt;h1 id=&#34;概况&#34;&gt;概况&lt;/h1&gt;
&lt;p&gt;转推流程序的过程：从一个观看地址拉流，然后推流到另一个推流地址。主要用于cdn之间转推，目前市面上大多数cdn厂商都愿意不支持动态转推，因此只能通过转推流程序进行转推。&lt;/p&gt;
&lt;p&gt;bug现象：使用obs studio推流到微赞可以成功，但是使用Erlang版本的转推流程序推流到微赞却失败。&lt;/p&gt;
&lt;p&gt;日志如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;14:12:35.926 [debug] payload [{amf,[&amp;#34;onBWDone&amp;#34;,0,null]}], msgtype[command_msg_4_amf0] 
14:12:35.949 [debug] play succ ======&amp;gt; url [&amp;#34;/live-sz/w1520993434573948&amp;#34;] 
14:12:35.949 [debug] {rtmp_msg,4,0,data_msg_4_amf0,1,{amf,[&amp;#34;|RtmpSampleAccess&amp;#34;,true,true]}}
14:12:35.949 [debug] {rtmp_msg,4,0,data_msg_4_amf0,1,{amf,[&amp;#34;onStatus&amp;#34;,{object,[{&amp;#34;code&amp;#34;,&amp;#34;NetStream.Data.Start&amp;#34;}]}]}}
14:12:36.038 [error] gen_server &amp;lt;0.122.0&amp;gt; terminated with reason: no match of right hand value &amp;lt;&amp;lt;0,0,0,0,0,0,0,0,113,142,194,240,185,25,41,180,242,33,5,112,128,97,178,8,79,179,28,53,152,242,82,43,234,104,113,246,170,189,182,146,122,36,155,3,152,180,226,122,36,97,52,67,53,158,107,170,178,119,209,132,40,233,102,182,142,233,218,71,55,8,121,67,117,58,130,91,107,224,202,5,1,132,37,245,143,231,20,198,121,204,57,80,102,165,104,245,79,71,254,169,15,3,166,12,148,45,24,62,253,66,93,139,84,139,54,236,47,5,98,95,51,231,222,144,8,153,232,166,227,151,57,98,214,63,238,167,212,49,51,160,83,248,246,199,...&amp;gt;&amp;gt; in rtmp_handshake:create_c2/2 line 61
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>rtmp规范1.0</title>
      <link>https://suncle.me/2018/03/09/rtmp%E8%A7%84%E8%8C%831-0/</link>
      <pubDate>Fri, 09 Mar 2018 13:52:45 +0000</pubDate>
      
      <guid>https://suncle.me/2018/03/09/rtmp%E8%A7%84%E8%8C%831-0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://flowsnow.oss-cn-shanghai.aliyuncs.com/history/image/rtmp_img/rtmp_illustration.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;RTMP（real time messaging protocol）协议&lt;/p&gt;
&lt;p&gt;本文为Adobe rtmp规范1.0的中文介绍，其中内容大部分都是翻译自rtmp官方文档&lt;a href=&#34;http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/rtmp/pdf/rtmp_specification_1.0.pdf&#34;&gt;rtmp_specification_1.0.pdf&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;具体文章目录参见文章内侧边栏&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>unix domain socket</title>
      <link>https://suncle.me/2017/12/11/unix-domain-socket/</link>
      <pubDate>Mon, 11 Dec 2017 14:01:05 +0000</pubDate>
      
      <guid>https://suncle.me/2017/12/11/unix-domain-socket/</guid>
      <description>&lt;h1 id=&#34;unix-domain-socket&#34;&gt;unix domain socket&lt;/h1&gt;
&lt;p&gt;unix domain socket 是在socket架构上发展起来的用于同一台主机的进程间通讯（IPC: Inter-Process Communication），它不需要经过网络协议栈，不需要打包拆包、计算校验和、维护序号和应答等，只是将应用层数据从一个进程拷贝到另一个进程。UNIX Domain Socket有SOCK_DGRAM或SOCK_STREAM两种工作模式，类似于UDP和TCP，但是面向消息的UNIX Domain Socket也是可靠的，消息既不会丢失也不会顺序错乱。&lt;/p&gt;
&lt;p&gt;UNIX Domain Socket可用于两个没有亲缘关系的进程，是全双工的，是目前使用最广泛的IPC机制，比如X Window服务器和GUI程序之间就是通过UNIX Domain Socket通讯的。&lt;/p&gt;
&lt;p&gt;UNIX Domain socket与网络socket类似，可以与网络socket对比应用。&lt;/p&gt;
&lt;p&gt;上述二者编程的不同如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;address family为AF_UNIX&lt;/li&gt;
&lt;li&gt;因为应用于IPC，所以UNIXDomain socket不需要IP和端口，取而代之的是文件路径来表示“网络地址”。这点体现在下面两个方面。&lt;/li&gt;
&lt;li&gt;地址格式不同，UNIXDomain socket用结构体sockaddr_un表示，是一个socket类型的文件在文件系统中的路径，这个socket文件由bind()调用创建，如果调用bind()时该文件已存在，则bind()错误返回。&lt;/li&gt;
&lt;li&gt;UNIX Domain Socket客户端一般要显式调用bind函数，而不象网络socket一样依赖系统自动分配的地址。客户端bind的socket文件名可以包含客户端的pid，这样服务器就可以区分不同的客户端。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面用python代码演示uds的使用&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>